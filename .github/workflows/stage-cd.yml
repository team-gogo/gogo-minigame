name: GOGO-MiniGame Stage CD

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.STAGE_SSH_HOST }}
          port: ${{ secrets.STAGE_SSH_PORT }}
          username: ${{ secrets.STAGE_SSH_USERNAME }}
          password: ${{ secrets.STAGE_SSH_PASSWORD }}
          script: |
            set -e
            mkdir -p /home/ubuntu/gogo-minigame
            cd /home/ubuntu/gogo-minigame
            
            if [ ! -d ".git" ]; then
              git clone -b develop https://github.com/team-gogo/gogo-minigame .
            else
              git pull origin develop
            fi
            
            docker-compose up --build -d gogo-minigame-stage
            
            docker container prune -f
            docker image prune -af
            
            - name: SSH Success Notification
              if: success()
              uses: sarisia/actions-status-discord@v1
              with:
                webhook: ${{ secrets.DISCORD_WEBHOOK }}
                color: 0x4CAF50
                title: "배포 성공"
                message: "GOGO User stage deployment completed successfully."

            - name: SSH Failure Notification
              if: failure()
              uses: sarisia/actions-status-discord@v1
              with:
                webhook: ${{ secrets.DISCORD_WEBHOOK }}
                color: 0xFF4C4C
                title: "배포 실패"
                message: "GOGO User stage deployment failed. Check the logs for details."